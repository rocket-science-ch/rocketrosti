[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
filterwarnings = [
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning:aioresponses",
    "ignore:Deprecated call to `pkg_resources\\.declare_namespace\\('mpl_toolkits'\\):DeprecationWarning:pkg_resources",
    "ignore:Deprecated call to `pkg_resources\\.declare_namespace\\('zope'\\):DeprecationWarning:pkg_resources",
    "ignore:Deprecated call to `pkg_resources\\.declare_namespace\\('ruamel'\\):DeprecationWarning:pkg_resources",
    "ignore:Deprecated call to `pkg_resources\\.declare_namespace\\('ruamel\\.yaml'\\):DeprecationWarning:pkg_resources",
    "ignore:Deprecated call to `pkg_resources\\.declare_namespace\\('google'\\):DeprecationWarning:pkg_resources",
]

[tool.isort]
profile = "black"
line_length = 120

[tool.black]
target-version = ['py311']
include = '\.pyi?$'
line-length = 120

[tool.ruff]
line-length = 120
select = [
    "E", "F", "B", "W", "Q", "UP", "YTT", "ANN", "ASYNC", "C4", "ISC", "INP", "PIE", "PYI", "PT",
    "RSE", "RET", "SLOT", "SIM", "TID", "TCH004", "TCH005", "PD", "PGH", "PLC", "TRY", "NPY", "PERF",
    "RUF",

    "N999",    # Invalid module name

    "D301",    # Use r""" if any backslashes in a docstring
    "D419",    # Docstring is empty

    ### Things that I'd like to enable, pending some fixes:
    # "D401",  # First line should be in imperative mood"

    ### Things we may want to enable:
    # "D100",  # Missing docstring in public module
    # "D101",  # Missing docstring in public class
    # "D102",  # Missing docstring in public method
    # "D103",  # Missing docstring in public function
    # "D104",  # Missing docstring in public package
    # "D105",  # Missing docstring in magic method
    # "D106",  # Missing docstring in public nested class
    # "D107",  # Missing docstring in __init__
    # "D200",  # One-line docstring should fit on one line with quotes
    # "A",     # flake8-builtins on variables shadowing builtins

    ### Related to machine-parseable docstrings:
    # "D407",  # Missing dashed underline after section
    # "D417",  # Missing argument descriptions in the docstring
    # "D418",  # Function decorated with @overload shouldn't contain a docstring

    # "D415",  # First line should end with a period, question mark, or exclamation point
]

ignore = [
    "B011",    # Do not `assert False` (`python -O` removes these calls), raise `AssertionError()`
    "UP013",   # Convert `...` from `TypedDict` functional to class syntax
    "UP014",   # Convert `FitzImage` from `NamedTuple` functional to class syntax
    "ANN101",  # Missing type annotation for self in method
    "ANN102",  # Missing type annotation for cls in classmethod
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "C408",    # Unnecessary dict call - rewrite as a literal
    "PT006",   # @pytest.mark.parametrize style
    "PT015",   # Assertion always fails, replace with pytest.fail() - nice, but should only apply to tests
    "SIM108",  # Use ternary operator instead of if-else
    "SIM300",  # Yoda conditions are discouraged,
    "TRY003",  # Avoid specifying long messages outside the exception class
    "PERF203", # try-except within a loop incurs performance overhead
]

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.flake8-type-checking]
exempt-modules = ["typing", "typing_extensions"]

[tool.poetry]
name = "rocketrosti"
version = "0.1.0"
description = "Chatbot, LLM companion and data retrieval framework"
authors = ["Sami Liedes <sami.liedes@rocket-science.ch>"]
readme = "README.md"
packages = [{include = "rrosti"}]

[tool.poetry.dependencies]

# Upper bound:
# We cannot have no upper bound because aiofile requires >=3.7, <4.
#
# We cannot have <4 because recent versions of scipy have an upperf bound of <3.13. Using <4 we get ancient versions
# of some packages.
python = ">=3.10,<3.13"

ipython = ">=8.13.1"
matplotlib = ">=3.7.1"
plotly = ">=5.14.1"
beautifulsoup4 = ">=4.12.2"
flask = {extras = ["async"], version = "^2.3.3"}
websockets = ">=11.0.2"

loguru = ">=0.7.1"

janus = ">=1.0.0"
pandas = ">=2.1.1"
scipy = ">=1.11.3"
openai = ">=0.27.6"
tabulate = ">=0.9.0"
orjson = ">=3.8.11"
tiktoken = ">=0.4.0"
joblib = ">=1.2.0"

# Hack to make sure we get the CPU only version. It's probably a good idea to update these to the
# latest version every now and then.
gevent = ">=22.10.2"
gspread = "^5.9.0"
aioconsole = "^0.6.1"
jsonschema = "^4.17.3"
ruamel-yaml = "^0.17.32"
ruamel-yaml-string = "^0.1.1"
scikit-learn = "^1.3.0"
marshmallow = "^3.19.0"
attrs = "^23.1.0"
overrides = "^7.4.0"

aiopath = "^0.6.11"
zstandard = "^0.21.0"
omegaconf = "^2.3.0"


[tool.poetry.group.dev.dependencies]
mypy = ">=1.2.0"
types-redis = ">=4.5.4.1"
types-requests = ">=2.29"
types-pyyaml = ">=6.0.12.9"
types-toml = ">=0.10.8.6"
types-beautifulsoup4 = ">=4.12.0.4"
types-tqdm = ">=4.65.0.1"
pandas-stubs = ">=2.1.1.230928"
pytest = "^7.3.1"
pytest-mock = "^3.10.0"
pytest-asyncio = "^0.21.0"
requests-mock = "^1.10.0"
aioresponses = {extras = ["fixture"], version = "^0.7.4"}
types-chardet = "^5.0.4.6"
types-pillow = "^9.5.0.4"
types-xmltodict = "^0.13.0.2"
types-jsonschema = "^4.17.0.8"
pytest-cov = "^4.1.0"
pre-commit = "^3.3.3"
black = "23.7.0"
attrs = {extras = ["typed"], version = "^23.1.0"}
ruff = "^0.0.287"
pytest-timeout = "^2.1.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
